digraph compressing_fsm {
	rankdir = LR;
	size="10"
	node [shape = doublecircle]; start exit error;
	node [shape = circle];
	start -> not_n [ label = "!N / addNuc" ];
	start -> n [label = "N / Ns = 1" ];
	start -> rare [label = "rareChar / {stOrd = 1; Ns = 0}"]
	start -> exit [label = "seqEnd"];
	start -> error [label = "N > 255"];
	not_n -> n [label = "N / Ns = 1"];
	not_n -> not_n [label = "!N / addNuc"];
	not_n -> rare [label = "rareChar / {stOrd = 1; Ns = 0}"];
	not_n -> exit [label = "seqEnd"];
	not_n -> error [label = "N > 255"];
	n -> not_n [label = "!N / {EscSeq; addNuc; Ns = 0}"];
	n -> n [label= "N / Ns++"];
	n -> n [label= "N > 255 / {EscSeq; Ns = 1}"];
	n -> rare [label = "rareChar / {stOrd = 1; EscSeq; Ns = 0"];
	n -> exit [label = "seqEnd / EscSeq"];
	rare -> not_n [label = "!N / {MissingNuc; AddNuc }"];
	rare -> n [label = "N / {MissingNuc; Ns = 1 }"];
	rare -> exit [label = "endSeq / MissingNuc"];
	rare -> rare [label = "rareChar / stOrd++"];
	rare -> start [label = "rareChar AND stiOr = len (rareSeq) - 1 / {stOr = 0; EscSeq}"];
}
